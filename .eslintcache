[{"/Users/willgreen/projects/brew-guide-client/src/index.js":"1","/Users/willgreen/projects/brew-guide-client/src/App.js":"2","/Users/willgreen/projects/brew-guide-client/src/Context.js":"3","/Users/willgreen/projects/brew-guide-client/src/GuidancePages/GuidancePage.js":"4","/Users/willgreen/projects/brew-guide-client/src/AddBrewPage/AddBrewPage.js":"5","/Users/willgreen/projects/brew-guide-client/src/Header/Header.js":"6","/Users/willgreen/projects/brew-guide-client/src/LoginPage/LoginPage.js":"7","/Users/willgreen/projects/brew-guide-client/src/Redirection/PublicRoute.js":"8","/Users/willgreen/projects/brew-guide-client/src/BrewList/BrewList.js":"9","/Users/willgreen/projects/brew-guide-client/src/RegisterPage/RegisterPage.js":"10","/Users/willgreen/projects/brew-guide-client/src/MainPage/MainPage.js":"11","/Users/willgreen/projects/brew-guide-client/src/Redirection/PrivateRoute.js":"12","/Users/willgreen/projects/brew-guide-client/src/LandingPage/LandingPage.js":"13","/Users/willgreen/projects/brew-guide-client/src/GuidancePages/V60/V60.js":"14","/Users/willgreen/projects/brew-guide-client/src/BrewDisplayPage/BrewDisplayPage.js":"15","/Users/willgreen/projects/brew-guide-client/src/GuidancePages/Aeropress/Aeropress.js":"16","/Users/willgreen/projects/brew-guide-client/src/GuidancePages/Kalita/Kalita.js":"17","/Users/willgreen/projects/brew-guide-client/src/GuidancePages/Automatic/Automatic.js":"18","/Users/willgreen/projects/brew-guide-client/src/EditBrew/EditBrew.js":"19","/Users/willgreen/projects/brew-guide-client/src/GuidancePages/FrenchPress/FrenchPress.js":"20","/Users/willgreen/projects/brew-guide-client/src/brew-helpers.js":"21","/Users/willgreen/projects/brew-guide-client/src/services/token-service.js":"22","/Users/willgreen/projects/brew-guide-client/src/GenericForm/GenericForm.js":"23","/Users/willgreen/projects/brew-guide-client/src/services/auth-api-service.js":"24","/Users/willgreen/projects/brew-guide-client/src/config.js":"25","/Users/willgreen/projects/brew-guide-client/src/services/api-services.js":"26","/Users/willgreen/projects/brew-guide-client/src/IndBrew/IndBrew.js":"27","/Users/willgreen/projects/brew-guide-client/src/Button/Button.js":"28"},{"size":261,"mtime":1611444101150,"results":"29","hashOfConfig":"30"},{"size":3883,"mtime":1611590336978,"results":"31","hashOfConfig":"30"},{"size":168,"mtime":1611531293733,"results":"32","hashOfConfig":"30"},{"size":1405,"mtime":1611682274298,"results":"33","hashOfConfig":"30"},{"size":4619,"mtime":1611682394622,"results":"34","hashOfConfig":"30"},{"size":403,"mtime":1611595283213,"results":"35","hashOfConfig":"30"},{"size":2373,"mtime":1611594136288,"results":"36","hashOfConfig":"30"},{"size":435,"mtime":1611512672780,"results":"37","hashOfConfig":"30"},{"size":849,"mtime":1611590699830,"results":"38","hashOfConfig":"30"},{"size":1842,"mtime":1611594136341,"results":"39","hashOfConfig":"30"},{"size":1272,"mtime":1611593938396,"results":"40","hashOfConfig":"30"},{"size":576,"mtime":1611511544510,"results":"41","hashOfConfig":"30"},{"size":1188,"mtime":1611594136288,"results":"42","hashOfConfig":"30"},{"size":1657,"mtime":1611444840716,"results":"43","hashOfConfig":"30"},{"size":2594,"mtime":1611680424366,"results":"44","hashOfConfig":"30"},{"size":1791,"mtime":1611444840688,"results":"45","hashOfConfig":"30"},{"size":1555,"mtime":1611444840690,"results":"46","hashOfConfig":"30"},{"size":1532,"mtime":1611444840687,"results":"47","hashOfConfig":"30"},{"size":6931,"mtime":1611681898600,"results":"48","hashOfConfig":"30"},{"size":1079,"mtime":1611444840688,"results":"49","hashOfConfig":"30"},{"size":78,"mtime":1610731613204,"results":"50","hashOfConfig":"30"},{"size":496,"mtime":1610143757639,"results":"51","hashOfConfig":"30"},{"size":273,"mtime":1610143795899,"results":"52","hashOfConfig":"30"},{"size":797,"mtime":1610143757639,"results":"53","hashOfConfig":"30"},{"size":60,"mtime":1610143488171,"results":"54","hashOfConfig":"30"},{"size":2055,"mtime":1611422202244,"results":"55","hashOfConfig":"30"},{"size":568,"mtime":1611594511198,"results":"56","hashOfConfig":"30"},{"size":258,"mtime":1611593661954,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"eu6c2f",{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"60"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"60"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"60"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"/Users/willgreen/projects/brew-guide-client/src/index.js",[],["121","122"],"/Users/willgreen/projects/brew-guide-client/src/App.js",["123"],"import React, { Component } from 'react'\nimport { Route } from 'react-router-dom'\nimport PrivateRoute from './Redirection/PrivateRoute'\nimport PublicRoute from './Redirection/PublicRoute'\nimport EditBrew from './EditBrew/EditBrew'\nimport BrewDisplayPage from './BrewDisplayPage/BrewDisplayPage'\nimport AddBrewPage from './AddBrewPage/AddBrewPage'\nimport Header from './Header/Header'\nimport TokenService from './services/token-service'\nimport ApiService from './services/api-services'\nimport GuidancePage from './GuidancePages/GuidancePage'\nimport LoginPage from './LoginPage/LoginPage'\nimport RegisterPage from './RegisterPage/RegisterPage'\nimport LandingPage from './LandingPage/LandingPage'\nimport MainPage from './MainPage/MainPage'\nimport ApiContext from './Context'\nimport './App.css';\nimport Kalita from './GuidancePages/Kalita/Kalita'\nimport V60 from './GuidancePages/V60/V60'\nimport Aeropress from './GuidancePages/Aeropress/Aeropress'\nimport Automatic from './GuidancePages/Automatic/Automatic'\nimport FrenchPress from './GuidancePages/FrenchPress/FrenchPress'\n\nclass App extends Component {\n  state = {\n    brews: []\n  }\n\n  componentDidMount() {\n    if(TokenService.hasAuthToken()){\n      ApiService.getBrews()\n        .then((brews) => {\n          this.setState({ brews })\n        })\n        .catch(error => {\n          console.error({ error })\n        })\n    }\n  }\n\n  handleAddBrew = brew => {\n    this.setState({\n      brews: [\n        ...this.state.brews,\n        brew\n      ]\n    })\n  }\n\n  handleEditBrew = brew => {\n    console.log(this.state.brews)\n    this.setState({\n      brews: [\n        this.state.brews.filter(brewToFind => brewToFind.id !== brew.id),\n        brew\n      ]\n    })\n  }\n\n  handleDeleteBrew = brewId => {\n    this.setState({\n      brews: this.state.brews.filter(brew => brew.id !== brewId)\n    })\n  }\n\n  handleLoggedIn = e => {\n      ApiService.getBrews()\n        .then((brews) => {\n          this.setState({ brews })\n        })\n        .catch(error => {\n          console.error({ error })\n        })\n  }\n\n  renderRoutes() {\n    return (\n      <div>\n        <PublicRoute\n          path={'/login'}\n          component={LoginPage}\n        />\n        <PublicRoute\n          path={'/register'}\n          component={RegisterPage}\n        />\n        <PublicRoute \n          path={'/landing-page'}\n          component={LandingPage}\n        />\n        <PrivateRoute\n          exact\n          path='/'\n          component={MainPage}\n        />\n        <PrivateRoute\n          path='/brew-guides'\n          component={GuidancePage}\n        />\n        <PrivateRoute\n          path='/edit/:brewId'\n          component={EditBrew}\n        />\n        <PrivateRoute\n          path='/brew/:brewId'\n          component={BrewDisplayPage}\n        />\n        <PrivateRoute\n          path='/new-brew'\n          component={AddBrewPage}\n        />\n        <PrivateRoute\n          path='/kalita-info'\n          component={Kalita}\n        />\n        <PrivateRoute\n          path='/V60-info'\n          component={V60}\n        />\n        <PrivateRoute\n          path='/aeropress-info'\n          component={Aeropress}\n        />\n        <PrivateRoute\n          path='/automatic-info'\n          component={Automatic}\n        />\n        <PrivateRoute\n          path='/french-press-info'\n          component={FrenchPress}\n        />\n      </div>\n    )\n  }\n\n  render() {\n    const value = {\n      brews: this.state.brews,\n      addBrew: this.handleAddBrew,\n      deleteBrew: this.handleDeleteBrew,\n      editBrew: this.handleEditBrew,\n      loggedIn: this.handleLoggedIn\n    }\n    return (\n      <ApiContext.Provider value={value}>\n        <div>\n          <header>\n            <Header />\n          </header>\n          <div className='main'>\n            {this.renderRoutes()}\n          </div>\n        </div>\n      </ApiContext.Provider>\n      \n    );\n  }\n  \n}\n\nexport default App;\n","/Users/willgreen/projects/brew-guide-client/src/Context.js",[],"/Users/willgreen/projects/brew-guide-client/src/GuidancePages/GuidancePage.js",[],"/Users/willgreen/projects/brew-guide-client/src/AddBrewPage/AddBrewPage.js",[],"/Users/willgreen/projects/brew-guide-client/src/Header/Header.js",[],"/Users/willgreen/projects/brew-guide-client/src/LoginPage/LoginPage.js",[],"/Users/willgreen/projects/brew-guide-client/src/Redirection/PublicRoute.js",[],"/Users/willgreen/projects/brew-guide-client/src/BrewList/BrewList.js",[],"/Users/willgreen/projects/brew-guide-client/src/RegisterPage/RegisterPage.js",[],"/Users/willgreen/projects/brew-guide-client/src/MainPage/MainPage.js",[],"/Users/willgreen/projects/brew-guide-client/src/Redirection/PrivateRoute.js",[],"/Users/willgreen/projects/brew-guide-client/src/LandingPage/LandingPage.js",[],"/Users/willgreen/projects/brew-guide-client/src/GuidancePages/V60/V60.js",["124"],"import React, { Component } from 'react'\n\nexport default class V60 extends Component {\n    render() {\n        return (\n            <>\n                <h2>\n                    V60 Guide\n                </h2>\n                <p>\n                    A V60 is a percolation method of brewing, which means that it is based on the water dripping through the ground coffee, instead of soaking in it. \n                </p>\n                <p>\n                    You'll have to wet the filter inside the V60, and add the grounds. Then you'll want to make a \"bloom\" with the coffee by adding the weight of the coffee's worth in water and waiting 30 seconds before adding any more.\n                </p>\n                <p>\n                    Once 30 seconds pass, add water up to 200g. After that point, just add 50g every 15 seconds until you have reached your projected brew weight. If you need help calculating your weights for the brew, just calculate the weight of how much coffee you want to make. Then divide that number by your preferred ratio to get your input weight. The brewing algorithm will do that automatically as long as you know how much coffee you want to make.\n                </p>\n                <p>\n                    After you've reached your projected brew weight, give the \"slurry\" a gentle stir. This will dislodge any grounds sticking to the sides of the filter. Then let the water drip down until the drips from the V60 are roughly three seconds apart. Then you can dispose of your filter and enjoy your coffee!\n                </p>\n                <h4>\n                    enjoy!\n                </h4>\n            </>\n        )\n    }\n}","/Users/willgreen/projects/brew-guide-client/src/BrewDisplayPage/BrewDisplayPage.js",[],"/Users/willgreen/projects/brew-guide-client/src/GuidancePages/Aeropress/Aeropress.js",["125"],"import React, { Component } from 'react'\n\nexport default class Aeropress extends Component {\n    render() {\n        return (\n            <>\n                <h2>\n                    AeroPress Guide\n                </h2>\n                <p>\n                    There are two methods for brewing an aeropress, standard and inverted. This guide will cover the inverted method. \n                </p>\n                <p>\n                    An aeropress is a super popular way to brew coffee. Its very portable, very quick, and relatively easy to get right.\n                </p>\n                <p>\n                    The key to brewing an aeropress well is to remember that it shouldnt take too long. Aeropress is a mixture of percolation and immersion brewing, which means that it has two stages of brewing, a \"steeping\" stage, and a drip stage. The inital stage should take about a minute with the water in the aeropress, and then another minute to slowly push the coffee out via the top of the aeropress. \n                </p>\n                <p>\n                    The basic steps of making an inverted aeropress are to first put the filter in the aeropress, then invert the connected pieces and add the ground coffee. Then, with heated water to about 195 degrees, add up to the ratio for this particular brew. \n                </p>\n                <p>\n                    After one minute, place your cup or carafe over the open top of the aeropress and invert it, then gently press the aeropress down until you hear a hissing sound. The hiss is the air escaping the filter which means that the coffee has made it through and you should stop pressing.\n                </p>\n                <h4>\n                    enjoy!\n                </h4>\n            </>\n            \n        )\n    }\n}","/Users/willgreen/projects/brew-guide-client/src/GuidancePages/Kalita/Kalita.js",[],"/Users/willgreen/projects/brew-guide-client/src/GuidancePages/Automatic/Automatic.js",["126","127"],"import React, { Component } from 'react'\n\nexport default class Automatic extends Component {\n    render() {\n        return (\n            <>\n                <h2>\n                    Automatic Guide\n                </h2>\n                <img></img>\n                <p>\n                    To state the obvious, any automatic method is going to be the easiest way to brew coffee. \n                </p>\n                <p>\n                    However, there are still some things you can do to elevate your automatic brews. \n                </p>\n                <p>\n                    The best things you can do are in the preparation.\n                </p>\n                <p>\n                    First, you'll want to start with good water. Anything filtered should be relatively fine, just don't use tap water. \n                </p>\n                <p>\n                    Then, make sure you have a way of grinding your coffee yourself, instead of buying it pre-ground. Most grinders will do just fine, but you'll want to avoid a bladde grinder if you can, and go for a burr grinder instead. The idea here is the consistent size of the grind pieces. A burr grinder will only allow the pieces through if they are a certain size, as opposed to a blade grinder which chops the beans randomly. \n                </p>\n                <p>\n                    Then, just try your brew and adjust the grind according to your taste preferences. \n                </p>\n                <h4>\n                    enjoy!\n                </h4>\n            </>\n        )\n    }\n}","/Users/willgreen/projects/brew-guide-client/src/EditBrew/EditBrew.js",[],"/Users/willgreen/projects/brew-guide-client/src/GuidancePages/FrenchPress/FrenchPress.js",["128","129"],"import React, { Component } from 'react'\n\nexport default class FrenchPress extends Component {\n    render() {\n        return (\n            <>\n                <h2>\n                    French Press Guide\n                </h2>\n                <img></img>\n                <p>\n                    A French Press is an immersion method of brewing, which means that it steeps watr and grounds like tea, as opposed to percolation where the water just drips through the grounds. \n                </p>\n                <p>\n                    Brewing with a french press is super easy, all you have to do is prepare the appropriate amount of coffeeand hot water. Then fill the french press with the ground coffee and water, then wait until the coffee naturally filters down to the bottom of the brewer. \n                </p>\n                <p>\n                    Once the coffee has filtered down, you'll use the the french press filter to push down until it naturally stops. Then just pour!\n                </p>\n                <h4>\n                    enjoy!\n                </h4>\n            </>\n        )\n    }\n}","/Users/willgreen/projects/brew-guide-client/src/brew-helpers.js",[],"/Users/willgreen/projects/brew-guide-client/src/services/token-service.js",[],"/Users/willgreen/projects/brew-guide-client/src/GenericForm/GenericForm.js",[],"/Users/willgreen/projects/brew-guide-client/src/services/auth-api-service.js",[],"/Users/willgreen/projects/brew-guide-client/src/config.js",["130"],"export default {\n    API_ENDPOINT: 'http://localhost:8000'\n}","/Users/willgreen/projects/brew-guide-client/src/services/api-services.js",[],"/Users/willgreen/projects/brew-guide-client/src/IndBrew/IndBrew.js",[],"/Users/willgreen/projects/brew-guide-client/src/Button/Button.js",[],{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":2,"column":10,"nodeType":"137","messageId":"138","endLine":2,"endColumn":15},{"ruleId":"139","severity":1,"message":"140","line":10,"column":17,"nodeType":"141","endLine":10,"endColumn":22},{"ruleId":"139","severity":1,"message":"140","line":10,"column":17,"nodeType":"141","endLine":10,"endColumn":22},{"ruleId":"135","severity":1,"message":"142","line":2,"column":8,"nodeType":"137","messageId":"138","endLine":2,"endColumn":12},{"ruleId":"139","severity":1,"message":"140","line":11,"column":17,"nodeType":"141","endLine":11,"endColumn":22},{"ruleId":"135","severity":1,"message":"142","line":2,"column":8,"nodeType":"137","messageId":"138","endLine":2,"endColumn":12},{"ruleId":"139","severity":1,"message":"140","line":11,"column":17,"nodeType":"141","endLine":11,"endColumn":22},{"ruleId":"143","severity":1,"message":"144","line":1,"column":1,"nodeType":"145","endLine":3,"endColumn":2},"no-native-reassign",["146"],"no-negated-in-lhs",["147"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Link' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]